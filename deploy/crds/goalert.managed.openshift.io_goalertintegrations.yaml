---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: goalertintegrations.goalert.managed.openshift.io
spec:
  group: goalert.managed.openshift.io
  names:
    kind: GoalertIntegration
    listKind: GoalertIntegrationList
    plural: goalertintegrations
    singular: goalertintegration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GoalertIntegration is the Schema for the goalertintegrations
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GoalertIntegrationSpec defines the desired state of GoalertIntegration
            properties:
              clusterDeploymentSelector:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                  A label selector used to find which clusterdeployment CRs receive
                  a Goalert integration based on this configuration.'
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              goalertCredsSecretRef:
                description: Reference to the secret containing Goalert cred
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              highEscalationPolicy:
                description: ID of a High Escalation Policy in Goalert.
                type: string
              lowEscalationPolicy:
                description: ID of a Low Escalation Policy in Goalert.
                type: string
              servicePrefix:
                description: Prefix to set on the Goalert Service name.
                type: string
              targetSecretRef:
                description: Name and namespace in the target cluster where the secret
                  is synced.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            required:
            - clusterDeploymentSelector
            - goalertCredsSecretRef
            - highEscalationPolicy
            - lowEscalationPolicy
            - servicePrefix
            - targetSecretRef
            type: object
          status:
            description: GoalertIntegrationStatus defines the observed state of GoalertIntegration
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
